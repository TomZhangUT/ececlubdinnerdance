<!DOCTYPE html>
<html>
  <head>
    <title>ECE Club Dinner Dance</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/dependencies/normalize.css">
    <link rel="stylesheet" href="/styles/dependencies/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/sharedstyles.css">
    <link rel="stylesheet" href="/styles/sharedheader.css">
    <!--STYLES END-->
  </head>

  <body>

    <!-- Background Animations -->
    <div id="footprints">

    </div>

    <!--   Background switching pictures -->
    <div class="backgroundswitch-outer">
      <div class="backgroundswitch-middle">
        <div class="backgroundswitch-inner">
          <div id="backgroundswitch-wrapper">
            <div id="backgroundswitch-leftcolumn">
              <div class="backgroundswitch-col-top" id="trans1">
              </div>
              <div class="backgroundswitch-col-bottom" id="pic1">
              </div>
            </div>
            <div id="backgroundswitch-rightcolumn">
              <div class="backgroundswitch-col-top" id="pic2">
              </div>
              <div class="backgroundswitch-col-bottom" id="trans2">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>



  <div class="page">



    
    <%- body %>




    <nav class="navbar navbar-default navbar navbar-inverse" id="topnav">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header" id="navinner">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            <li><a href="/">Home</a></li>
            <% if (session.User && session.User.admin) { %>
              <li role="presentation" class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-expanded="false">
                  Manage <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                  <li><a href="/user/index">Users</a></li>
                  <li><a href="/riddle/index">Riddles</a></li>
                  <li><a href="/submission/index">Submissions</a></li>
                  <li><a href="/bus/index">Buses</a></li>
                </ul>
              </li>
              <li><a href="/user/register">Register</a></li>
            <% } %>

            <% if (session.authenticated) { %>
              <li><a href="/user/show/<%= session.User.id %>">Profile</a></li>
            <% } %>

            <% if (session.authenticated) { %>
            <li><a href="/tables/">Tables</a></li>
            <% } %>
            <li><a href="/eventinfo/">Event Info</a></li>
            <li><a href="/menu/">Menu</a></li>
            <li><a href="/submission/new">Riddles</a></li>
            <% if (session.authenticated) { %>
              <li><a href="/session/destroy">Logout</a></li>
            <% } else {%>
              <li><a href="/session/new">Login</a></li>
            <% } %>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>

  </div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery.min.js"></script>
    <script src="/js/dependencies/bootstrap.min.js"></script>
    <script src="/js/homepage-backgroundswitch.js"></script>
    <script src="/js/homepage-footprints.js"></script>
    <!--SCRIPTS END-->
    <%- blocks.localScripts %>
  </body>
</html>
